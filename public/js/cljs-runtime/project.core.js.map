{"version":3,"sources":["project/core.cljs"],"mappings":";AASA,qBAAA,2CAAA,iEAAA,jIAAKA;AAEL,yDAAA,zDAACC,kIAEA,iBAAAC,NACGG;AADH,AAAA,IAAAF,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DACUG;WADV,AAAAF,4CAAAD,WAAA,IAAA,lEACYI;AADZ,AAEE,2DAAA,pDAACC,8CAAMH,uEAAkBE;;AAE5B,IAAAE,iBAAA;IAAAC,iBAEC,WACGL;AADH,AAEE,OAAA,+FAAaA;;AAJhB,AAAA,2GAAAI,eAAAC,kDAAAD,eAAAC,1LAACC,sDAAAA,qFAAAA;AAMD,mBAAA,nBAAMC;AAAN,AAAA,0FAAA,mDAAA,2CAAA,uDAAA,2CAAA,gEAAA,wBAAA,qHAAA,mFAAA,qFAAA,2CAAA,uDAAA,2CAAA,mEAAA,1ZAGIC,geAGA,8BAAA,AAAAC,bAAMC,6BAAY,iBAAAC,WAAA,mFAAA;AAAA,AAAA,sHAAAA,8CAAAA,5JAACC,wDAAAA,kEAAAA;;AAAnB,AACE,IAAAC,qBAAA,yCAAAC;AAAA,AAAA,YAAAC,kBAAA,KAAA;AAAA,AAAA,IAAAD,eAAAA;;AAAA,AAAA,IAAAE,qBAAA,AAAAC,cAAAH;AAAA,AAAA,GAAAE;AAAA,AAAA,IAAAF,eAAAE;AAAA,AAAA,GAAA,AAAAE,6BAAAJ;AAAA,IAAAK,kBA86E6C,AAAAwB,sBAAA7B;IA96E7CM,qBAAA,AAAAC,gBAAAF;IAAAG,WAAA,AAAAC,uBAAAH;AAAA,AAAA,GAAA,AAAA,iBAAAI,WAAA;;AAAA,AAAA,GAAA,CAAAA,WAAAJ;AAAA,gBAAA,AAAAK,eAAAN,gBAAAK,3CAAMU;AAAN,AAAA,AAAA,AAAAR,uBAAAJ,SAAA,mFAAA,iDAAA,2CAAA,0JAAA,tGAES,AAAA,mFAAOY,sGACZC,kCAAeD;;AAHnB,eAAA,CAAAV,WAAA;;;;AAAA;;;;;AAAA,OAAAG,qBAAA,AAAAC,gBAAAN,UAAA,AAAAO,+BAAA,AAAAC,qBAAAhB;;AAAA,OAAAa,qBAAA,AAAAC,gBAAAN,UAAA;;;AAAA,gBAAA,AAAAS,gBAAAjB,5BAAMoB;AAAN,AAAA,OAAAF,eAAA,mFAAA,iDAAA,2CAAA,0JAAA,+IAAA,AAAAH,+BAAA,AAAAI,eAAAnB,nSAES,AAAA,mFAAOoB,sGACZC,kCAAeD;;;AAHnB;;;;GAAA,KAAA;;AAAA,AAAA,OAAArB,mBAAgBH;aAPtB,mFAAA;;AAaA,AAAK0B,2BACH,qCAAA,2CAAA,hFAACC,oBAAU9B,gJACK;AAAA,AAEE,uGAAA,vGAAC+B;;AACD,OAACC;;AAErB,qBAAA,rBAAeC;AAAf,AAEE,uGAAA,vGAACF;;AACD,wDAAA,jDAACG,oIACCL,iCACD,wBAAA,xBAAiBM","names":["project.core/state","re_frame.core.reg_event_db","p__16443","vec__16444","cljs.core.nth","state","_","data","cljs.core.assoc","G__16447","G__16448","re-frame.core/reg-sub","project.core/app","project.components/header","cljs.core/deref","characters","G__16449","re-frame.core/subscribe","iter__5523__auto__","s__16451","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__16453","cljs.core/chunk-buffer","i__16452","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__16450","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","character","project.components/character-list","project.core/app-wrapper","cljs.core/with-meta","cljs.core.print","project.components/get-character-list","project.core/start","reagent.dom.render","js/document","cljs.core/chunk-first"],"sourcesContent":["(ns project.core\n  (:require\n   [re-frame.core :refer [subscribe reg-event-db reg-sub]]\n   [reagent.dom]\n   [reagent.core]\n   [project.components :refer [character-list\n                               get-character-list\n                               header]]))\n\n(def state {:characters []})\n\n(reg-event-db\n :set-characters\n (fn\n   [state [_ data]]\n   (assoc state :characters data)))\n\n(reg-sub\n :characters\n (fn\n   [state]\n   (:characters state)))\n\n(defn app\n  []\n  [:div {:style {:margin-top \"-2rem\"}}\n   [header]\n   [:div.centered-content\n    {:style {:font-family :arial}}\n    (let [characters @(subscribe [:characters])]\n      (for [character characters]\n        [:<>\n         {:key (:name character)}\n         [character-list character]]))]\n   [:br]])\n\n(def app-wrapper\n  (with-meta app {:component-did-mount\n                  (fn\n                    []\n                    (print \"getting character list..\")\n                    (get-character-list))}))\n\n(defn ^:export start\n  []\n  (print \"app started\")\n  (reagent.dom/render\n   [app-wrapper]\n   (.getElementById js/document \"app\")))\n"]}