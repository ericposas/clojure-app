shadow$provide.module$node_modules$axios$lib$core$Axios=function(global,require,module,exports){function Axios(instanceConfig){this.defaults=instanceConfig;this.interceptors={request:new InterceptorManager,response:new InterceptorManager}}global=require("module$node_modules$axios$lib$utils");var buildURL=require("module$node_modules$axios$lib$helpers$buildURL"),InterceptorManager=require("module$node_modules$axios$lib$core$InterceptorManager"),dispatchRequest=require("module$node_modules$axios$lib$core$dispatchRequest"),
mergeConfig=require("module$node_modules$axios$lib$core$mergeConfig"),buildFullPath=require("module$node_modules$axios$lib$core$buildFullPath"),validator=require("module$node_modules$axios$lib$helpers$validator"),validators=validator.validators;Axios.prototype.request=function(configOrUrl,config){"string"===typeof configOrUrl?(config=config||{},config.url=configOrUrl):config=configOrUrl||{};config=mergeConfig(this.defaults,config);config.method=config.method?config.method.toLowerCase():this.defaults.method?
this.defaults.method.toLowerCase():"get";configOrUrl=config.transitional;void 0!==configOrUrl&&validator.assertOptions(configOrUrl,{silentJSONParsing:validators.transitional(validators.boolean),forcedJSONParsing:validators.transitional(validators.boolean),clarifyTimeoutError:validators.transitional(validators.boolean)},!1);var requestInterceptorChain=[],synchronousRequestInterceptors=!0;this.interceptors.request.forEach(function(interceptor){if("function"!==typeof interceptor.runWhen||!1!==interceptor.runWhen(config))synchronousRequestInterceptors=
synchronousRequestInterceptors&&interceptor.synchronous,requestInterceptorChain.unshift(interceptor.fulfilled,interceptor.rejected)});var responseInterceptorChain=[];this.interceptors.response.forEach(function(interceptor){responseInterceptorChain.push(interceptor.fulfilled,interceptor.rejected)});var promise;if(!synchronousRequestInterceptors){configOrUrl=[dispatchRequest,void 0];Array.prototype.unshift.apply(configOrUrl,requestInterceptorChain);configOrUrl=configOrUrl.concat(responseInterceptorChain);
for(promise=Promise.resolve(config);configOrUrl.length;)promise=promise.then(configOrUrl.shift(),configOrUrl.shift());return promise}for(configOrUrl=config;requestInterceptorChain.length;){var onFulfilled=requestInterceptorChain.shift(),onRejected=requestInterceptorChain.shift();try{configOrUrl=onFulfilled(configOrUrl)}catch(error){onRejected(error);break}}try{promise=dispatchRequest(configOrUrl)}catch(error){return Promise.reject(error)}for(;responseInterceptorChain.length;)promise=promise.then(responseInterceptorChain.shift(),
responseInterceptorChain.shift());return promise};Axios.prototype.getUri=function(config){config=mergeConfig(this.defaults,config);var fullPath=buildFullPath(config.baseURL,config.url);return buildURL(fullPath,config.params,config.paramsSerializer)};global.forEach(["delete","get","head","options"],function(method){Axios.prototype[method]=function(url,config){return this.request(mergeConfig(config||{},{method,url,data:(config||{}).data}))}});global.forEach(["post","put","patch"],function(method){function generateHTTPMethod(isForm){return function(url,
data,config){return this.request(mergeConfig(config||{},{method,headers:isForm?{"Content-Type":"multipart/form-data"}:{},url,data}))}}Axios.prototype[method]=generateHTTPMethod();Axios.prototype[method+"Form"]=generateHTTPMethod(!0)});module.exports=Axios}
//# sourceMappingURL=module$node_modules$axios$lib$core$Axios.js.map
