{
"version":3,
"file":"module$node_modules$axios$lib$core$mergeConfig.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/axios/lib/core/mergeConfig.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$axios$lib$core$mergeConfig\"] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'beforeRedirect': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","utils","module.exports","config1","config2","getMergedValue","target","source","isPlainObject","merge","isArray","slice","mergeDeepProperties","prop","isUndefined","undefined","valueFromConfig2","defaultToConfig2","mergeDirectKeys","config","mergeMap","forEach","Object","keys","concat","computeConfigValue","configValue"]
}
