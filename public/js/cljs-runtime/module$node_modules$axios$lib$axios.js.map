{
"version":3,
"file":"module$node_modules$axios$lib$axios.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,mCAAA,CAAwD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAehGC,QAASA,eAAc,CAACC,aAAD,CAAgB,CACrC,IAAIC,QAAU,IAAIC,KAAJ,CAAUF,aAAV,CAAd,CACIG,SAAWC,IAAA,CAAKF,KAAMG,CAAAA,SAAUC,CAAAA,OAArB,CAA8BL,OAA9B,CAGfM,MAAMC,CAAAA,MAAN,CAAaL,QAAb,CAAuBD,KAAMG,CAAAA,SAA7B,CAAwCJ,OAAxC,CAGAM,MAAMC,CAAAA,MAAN,CAAaL,QAAb,CAAuBF,OAAvB,CAGAE,SAASM,CAAAA,MAAT,CAAkBC,QAAe,CAACC,cAAD,CAAiB,CAChD,MAAOZ,eAAA,CAAea,WAAA,CAAYZ,aAAZ,CAA2BW,cAA3B,CAAf,CADyC,CAIlD,OAAOR,SAf8B,CAZvC,IAAII,MAAQX,OAAA,CAAQ,qCAAR,CAAZ,CACIQ,KAAOR,OAAA,CAAQ,4CAAR,CADX;AAEIM,MAAQN,OAAA,CAAQ,0CAAR,CAFZ,CAGIgB,YAAchB,OAAA,CAAQ,gDAAR,CACdiB,OAAAA,CAAWjB,OAAA,CAAQ,8CAAR,CA2BXkB,OAAAA,CAAQf,cAAA,CAAec,MAAf,CAGZC,OAAMZ,CAAAA,KAAN,CAAcA,KAGdY,OAAMC,CAAAA,aAAN,CAAsBnB,OAAA,CAAQ,oDAAR,CACtBkB,OAAME,CAAAA,WAAN,CAAoBpB,OAAA,CAAQ,kDAAR,CACpBkB,OAAMG,CAAAA,QAAN,CAAiBrB,OAAA,CAAQ,+CAAR,CACjBkB,OAAMI,CAAAA,OAAN,CAAgBtB,OAAA,CAAQ,wCAAR,CAAsBuB,CAAAA,OACtCL;MAAMM,CAAAA,UAAN,CAAmBxB,OAAA,CAAQ,kDAAR,CAGnBkB,OAAMO,CAAAA,UAAN,CAAmBzB,OAAA,CAAQ,+CAAR,CAGnBkB,OAAMQ,CAAAA,MAAN,CAAeR,MAAMC,CAAAA,aAGrBD,OAAMS,CAAAA,GAAN,CAAYC,QAAY,CAACC,QAAD,CAAW,CACjC,MAAOC,QAAQH,CAAAA,GAAR,CAAYE,QAAZ,CAD0B,CAGnCX,OAAMa,CAAAA,MAAN,CAAe/B,OAAA,CAAQ,8CAAR,CAGfkB,OAAMc,CAAAA,YAAN,CAAqBhC,OAAA,CAAQ,oDAAR,CAErBC,OAAOC,CAAAA,OAAP,CAAiBgB,MAGjBjB,OAAOC,CAAAA,OAAQ+B,CAAAA,OAAf,CAAyBf,MAhEuE;",
"sources":["node_modules/axios/lib/axios.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$axios$lib$axios\"] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = require('./cancel/CanceledError');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\naxios.toFormData = require('./helpers/toFormData');\n\n// Expose AxiosError class\naxios.AxiosError = require('../lib/core/AxiosError');\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n};"],
"names":["shadow$provide","global","require","module","exports","createInstance","defaultConfig","context","Axios","instance","bind","prototype","request","utils","extend","create","instance.create","instanceConfig","mergeConfig","defaults","axios","CanceledError","CancelToken","isCancel","VERSION","version","toFormData","AxiosError","Cancel","all","axios.all","promises","Promise","spread","isAxiosError","default"]
}
