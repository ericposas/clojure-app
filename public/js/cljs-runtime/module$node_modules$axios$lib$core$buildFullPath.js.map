{
"version":3,
"file":"module$node_modules$axios$lib$core$buildFullPath.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,gDAAA,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7G,IAAIC,cAAgBH,OAAA,CAAQ,qDAAR,CAApB,CACII,YAAcJ,OAAA,CAAQ,mDAAR,CAWlBC,OAAOC,CAAAA,OAAP,CAAiBG,QAAsB,CAACC,OAAD,CAAUC,YAAV,CAAwB,CAC7D,MAAID,QAAJ,EAAe,CAACH,aAAA,CAAcI,YAAd,CAAhB,CACSH,WAAA,CAAYE,OAAZ,CAAqBC,YAArB,CADT,CAGOA,YAJsD,CAf8C;",
"sources":["node_modules/axios/lib/core/buildFullPath.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$axios$lib$core$buildFullPath\"] = function(global,require,module,exports) {\n'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","isAbsoluteURL","combineURLs","module.exports","baseURL","requestedURL"]
}
