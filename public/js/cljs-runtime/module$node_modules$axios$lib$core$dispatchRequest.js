shadow$provide.module$node_modules$axios$lib$core$dispatchRequest=function(global,require,module,exports){function throwIfCancellationRequested(config){config.cancelToken&&config.cancelToken.throwIfRequested();if(config.signal&&config.signal.aborted)throw new CanceledError;}var utils=require("module$node_modules$axios$lib$utils"),transformData=require("module$node_modules$axios$lib$core$transformData"),isCancel=require("module$node_modules$axios$lib$cancel$isCancel"),defaults=require("module$node_modules$axios$lib$defaults$index"),
CanceledError=require("module$node_modules$axios$lib$cancel$CanceledError");module.exports=function(config){throwIfCancellationRequested(config);config.headers=config.headers||{};config.data=transformData.call(config,config.data,config.headers,config.transformRequest);config.headers=utils.merge(config.headers.common||{},config.headers[config.method]||{},config.headers);utils.forEach("delete get head post put patch common".split(" "),function(method){delete config.headers[method]});return(config.adapter||
defaults.adapter)(config).then(function(response){throwIfCancellationRequested(config);response.data=transformData.call(config,response.data,response.headers,config.transformResponse);return response},function(reason){isCancel(reason)||(throwIfCancellationRequested(config),reason&&reason.response&&(reason.response.data=transformData.call(config,reason.response.data,reason.response.headers,config.transformResponse)));return Promise.reject(reason)})}}
//# sourceMappingURL=module$node_modules$axios$lib$core$dispatchRequest.js.map
