{
"version":3,
"file":"module$node_modules$axios$lib$cancel$CanceledError.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,kDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAY/GC,QAASA,cAAa,CAACC,OAAD,CAAU,CAE9BC,UAAWC,CAAAA,IAAX,CAAgB,IAAhB,CAAiC,IAAX,EAAAF,OAAA,CAAkB,UAAlB,CAA+BA,OAArD,CAA8DC,UAAWE,CAAAA,YAAzE,CACA,KAAKC,CAAAA,IAAL,CAAY,eAHkB,CAThC,IAAIH,WAAaL,OAAA,CAAQ,+CAAR,CACLA,QAAAS,CAAQ,qCAARA,CAcNC,CAAAA,QAAN,CAAeP,aAAf,CAA8BE,UAA9B,CAA0C,CACxCM,WAAY,CAAA,CAD4B,CAA1C,CAIAV,OAAOC,CAAAA,OAAP,CAAiBC,aAtB8F;",
"sources":["node_modules/axios/lib/cancel/CanceledError.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$axios$lib$cancel$CanceledError\"] = function(global,require,module,exports) {\n'use strict';\n\nvar AxiosError = require('../core/AxiosError');\nvar utils = require('../utils');\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction CanceledError(message) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nmodule.exports = CanceledError;\n\n};"],
"names":["shadow$provide","global","require","module","exports","CanceledError","message","AxiosError","call","ERR_CANCELED","name","utils","inherits","__CANCEL__"]
}
